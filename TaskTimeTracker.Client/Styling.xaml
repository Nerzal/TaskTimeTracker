<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="clr-namespace:TaskTimeTracker.Client.Ui.Behaviors"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:local="clr-namespace:TaskTimeTracker.Client">
  <DataTemplate x:Key="TaskDataTemplate" DataType="local:Task">
    <Border Background="Transparent">
      <Border.ContextMenu>
        <ContextMenu>
          <MenuItem Command="{Binding CopyCommand}" Header="{DynamicResource TaskList.Entry.ContextMenu.Copy}" />
          <MenuItem Command="{Binding DataContext.RemoveCommand,
                                      RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding}"
                    Header="{DynamicResource TaskList.Entry.ContextMenu.Delete}" />
        </ContextMenu>
      </Border.ContextMenu>
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0"
              Grid.Column="0"
              Margin="0,2,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <StackPanel Grid.Column="0"
                      VerticalAlignment="Center"
                      Orientation="Horizontal">
            <TextBlock Text="{Binding CreationTime.Hour, StringFormat={}{0:0#.##}}" />
            <TextBlock Text=":" />
            <TextBlock Text="{Binding CreationTime.Minute, StringFormat={}{0:0#.##}}" />
            <TextBlock Text=" - " />
          </StackPanel>
          <TextBlock Grid.Column="1"
                     VerticalAlignment="Center"
                     Text="{Binding Tag}"
                     TextWrapping="WrapWithOverflow" />
        </Grid>
        <Button Grid.Row="0"
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Background="Transparent"
                BorderBrush="Transparent"
                Command="{Binding DataContext.RemoveCommand,
                                  RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                CommandParameter="{Binding}"
                Content="x" />
        <Button Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Right"
                Command="{Binding EditCommand}"
                Content="{DynamicResource TaskList.Entry.EditButton.Content}"
                Padding="10,0" />
      </Grid>
    </Border>
  </DataTemplate>

  <DataTemplate x:Key="EditTaskDataTemplate" DataType="local:Task">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid Margin="0 2 0 0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBox Grid.Column="0"
                 Width="30"
                 VerticalAlignment="Center"
                 behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Text="{Binding CreationTime.Hour}" />
        <TextBlock Grid.Column="1"
                   Margin="2,0"
                   VerticalAlignment="Center"
                   Text=":" />
        <TextBox Grid.Column="2"
                 Width="30"
                 VerticalAlignment="Center"
                 behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Text="{Binding CreationTime.Minute}" />
        <TextBlock Grid.Column="3"
                   Margin="3,0"
                   VerticalAlignment="Center"
                   Text="-" />
        <TextBox Grid.Column="4"
                 AcceptsReturn="True"
                 Text="{Binding Tag}"
                 TextWrapping="WrapWithOverflow" />
      </Grid>
      <Button Grid.Row="0"
              Grid.Column="1"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Background="Transparent"
              BorderBrush="Transparent"
              Command="{Binding DataContext.RemoveCommand,
                                RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
              CommandParameter="{Binding}"
              Content="x" />
      <Grid Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="0,5,0,0"
            HorizontalAlignment="Right">
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0"
                Width="50"
                Command="{Binding SaveCommand}"
                Content="{DynamicResource TaskList.Entry.SaveButton.Content}" />
        <Button Grid.Column="1"
                Width="50"
                Margin="5,0,0,0"
                Command="{Binding AbortCommand}"
                Content="{DynamicResource TaskList.Entry.AbortButton.Content}" />
      </Grid>
    </Grid>
  </DataTemplate>

  <Style x:Key="EditTaskDataStyle" TargetType="ListBoxItem">
    <Setter Property="ContentTemplate" Value="{StaticResource TaskDataTemplate}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding EditMode}" Value="True">
        <DataTrigger.Setters>
          <Setter Property="ContentTemplate" Value="{StaticResource EditTaskDataTemplate}" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MyBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False">
        <DataTrigger.Setters>
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="BorderBrush" Value="{StaticResource GrayBrush9}" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
    <Setter Property="controls:ButtonHelper.PreserveTextCase" Value="True" />
  </Style>
</ResourceDictionary>